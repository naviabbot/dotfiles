#+TITLE: StumpWM Config
#+PROPERTY: header-args :tangle init.lisp

* About
  This was a project undertaken to convert and use an Org file to manage a StumpWM, making it portable with a simple `org-babel-tangle` on any system

* Preamble
  The following line is imperative... as in needed so you don't have to write `stumpwm:` before each command.

  #+BEGIN_SRC lisp
    (in-package :stumpwm)
  #+END_SRC

* Swank
  Most Lispers implement a Swank server to aide in hacking StumpWM. To use, simply open any file in Emacs and run `M-x slime-connect RET RET 4004 RET` to connect. Once in, run `(in-package :stumpwm)` to start hacking.

  #+BEGIN_SRC lisp
    (require :swank)
    (swank-loader:init)
    (swank:create-server :port 4004
                         :style swank:*communication-style*
                         :dont-close t)
  #+END_SRC

* Mode Line
  Like Emacs, StumpWM has a handy mode line that can be used to show a variety of text. Mine is no different. It utilizes stumpwm-weather as well as a few hand-picked modules from the Contrib repo. Gaps are loaded here, but for brevity's sake.

  #+BEGIN_SRC lisp
    (push "/home/jdcain/quicklisp/local-projects/stumpwm-weather/" asdf:*central-registry*)
    (ql:quickload :stumpwm-weather)
    
    (mapcar #'load-module '("disk"
                            "swm-gaps"
                            ))
    
    (setf *mode-line-timeout* 1)
    
    (setf stumpwm-weather:*open-weather-map-api-key* "c2b5025a9eab389939ec6a5be13f7452"
          stumpwm-weather:*units*                 "imperial"
          stumpwm-weather:*format-str*            "%H% %d %tÂ°F"
          stumpwm-weather:*time-format-str*       "%H:%M:%S" ; strftime format
          stumpwm-weather:*location*              "68005,us" ; Offuit AFB, NE 68005 USA
          stumpwm-weather:*mode-line-formatter*   #\E
          )
    
    (stumpwm-weather:on)
    (add-hook stumpwm:*quit-hook* 'stumpwm-weather:off)
    
    (setf *screen-mode-line-format*
          (list
           "[^B%n^b]"
           " ^>| " ;align right
           " %d |" ;date
           " %D |" ;disk
           " %E "
           ))
  #+END_SRC

* Groups
  Stump only comes configured for one workspace or "group". More can be added with the gnew command when running, but it is best to set up before we hop in, ne?

  #+BEGIN_SRC lisp
    (grename "Code")
    (gnew "Web")
    (gnew "Chat")
    (gnew "Scrot")
    (gselect "1")
  #+END_SRC

* Keybindings
  The heart of any twm is it's keybindings.

  #+BEGIN_SRC lisp
    (set-prefix-key (kbd "C-d"))
    (define-key *root-map* (kbd "c") "exec kitty")
  #+END_SRC

* Aesthetic
  Our magic theme. Right now, it's based on a screenshot of the first episode of Macross Delta. Our gaps are defined here too.

  #+BEGIN_SRC lisp
    (setq *mode-line-foreground-color* "#ebdef4")
    (setq *mode-line-background-color* "#1b1334")
    (set-fg-color "#ebdef4")
    (set-bg-color "#1b1334")
    (set-font "-bitstream-bitstream vera sans mono-medium-r-normal-*-12-*-*-*-m-*-*-9")
    (setf *message-window-gravity* :bottom)
    (setf *message-window-input-gravity* :bottom)
    (setf *input-window-gravity* :bottom)
    
    (setf swm-gaps:*head-gaps-size* 8)
    (setf swm-gaps:*inner-gaps-size* 5)
    (setf swm-gaps:*outer-gaps-size* 5)
    (run-shell-command "~/.fehbg")
  #+END_SRC

* Autostarts
  Finally, we start all the beautiful programs that need to spawn in the background.

  #+BEGIN_SRC lisp
    (run-shell-command "compton &")
  #+END_SRC

